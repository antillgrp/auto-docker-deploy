version: "3.8"

services: 
  rabbitmq:
    image: rabbitmq:3.13.0-management-alpine
    container_name: rabbitmq
    restart: always
    hostname: rabbitmq-container
    ports:
      - "15672:15672"
      #- "5672:5672"
    volumes:
      - "rabbitmq:/var/lib/rabbitmq/mnesia"
      - "/etc/timezone:/etc/timezone:ro" 
      - "/etc/localtime:/etc/localtime:ro"      
    networks:
      - cs_backend

  postgres:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/postgres:4.3.5-release-20240812
    container_name: postgres
    restart: always
    command:
      [
        "postgres",
        "-c",
        "log_statement=all",
        "-c",
        "log_destination=stderr",
        "-c",
        "shared_preload_libraries=pg_cron",
        "-c",
        "max_worker_processes=40",
        "-c",
        "cron.database_name=certscandb",
      ]
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: cip-dev
    volumes:
      - "pg-data:/var/lib/postgresql/data"
      - "/etc/timezone:/etc/timezone:ro" 
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - "5432"
    networks:
      - cs_backend

  redis:
    image: redis:7.2.4-alpine
    container_name: redis
    restart: always
    environment:
      REDIS_PASSWORD: solutions@123
    command: /bin/sh -c 'redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}'
    ports:
      - "6379"
    volumes:
      - "redis-data:/data"
      - "/etc/timezone:/etc/timezone:ro" 
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - cs_backend
      
  csview:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/core:4.3.5-release-20240812
    container_name: csview
    depends_on:
      - discovery-service
      - configserver
    networks:
      cs_backend:
        aliases:
          - "portal.certscan.net"
    ports:
      - "8080:8080"
      - "9001:9001"
    restart: always
    environment:
      SERVER_HOME: /home/Server
      SPRING_RABBITMQ_HOST: rabbitmq
      # TZ: Asia/Kolkata
    volumes:
      - "cs-props:/home/properties"
      - "cs-server:/home/Server" 
      - "../logs:/home/Server/logs:rw"
      - "../archive:/home/Output:rw"
      - "/etc/timezone:/etc/timezone:ro" 
      - "/etc/localtime:/etc/localtime:ro"  
 
  workflow:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/workflowdesginerservice:4.3.5-release-20240812
    container_name: workflow
    restart: always
    networks:
      cs_backend:
        aliases:
          - "portal.certscan.net"
    depends_on:
      - discovery-service
      - configserver
      - redis
    ports:
      - "8030"
    environment:
      SERVER_HOME: /home/Server
      #TZ: Asia/Kolkata
    volumes:
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "../logs:/home/Server/logs" 
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"

  cchelp:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/cchelp:4.3.5-release-20240812
    restart: always
    container_name: cchelp
    ports:
      - "8040:8040"
    volumes:
      - "cs-props:/home/properties"
    networks:
      - cs_backend

  configserver:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/configservice:4.3.5-release-20240812
    container_name: configserver
    restart: always
    ports:
      - "8010:8010"
    environment:
      SERVER_HOME: /home/Server
      #TZ: Asia/Kolkata
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - discovery-service
    volumes:
      - "../logs:/home/Server/logs"
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"    
    networks:
      - cs_backend      

  assignmentservice:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/assignmentservice:4.3.5-release-20240812
    container_name: assignmentservice
    restart: always
    #ports:
      #- "8090:8099"
    environment:
      SERVER_HOME: /home/Server
      #TZ: Asia/Kolkata
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - discovery-service  
    volumes:
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "../logs:/home/Server/logs"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"   
    networks:
      - cs_backend

  converter:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/imageprocessor:4.3.5-release-20240812
    container_name: converter
    restart: always
    depends_on:
      - discovery-service
      - configserver
    networks:
      - cs_backend
    ports:
      - "8090"
      - "7090:7090"
    environment:
      SERVER_HOME: /home/Server
      SPRING_RABBITMQ_HOST: rabbitmq
    volumes:
      - "../logs:/home/Server/logs"
      - "../archive:/home/Output"
      - "../archive:/app/data"
      - "cs-props:/home/properties"
      - "cs-server:/home/Server" 
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
  
  event:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/eventalarms:4.3.5-release-20240812
    container_name: event
    restart: always
    ports:
      - "8060:8060"
    environment:
      SERVER_HOME: /home/Server
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - discovery-service
      - configserver
    volumes:
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      -  "../logs:/home/Server/logs:rw"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - cs_backend

  workflowengine:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/workflowengine:4.3.5-release-20240812
    container_name: workflowengine
    restart: always
    #ports:
      #- "9081:9081"
    volumes:
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "../logs:/home/workflowengine/logs"
      - "../logs:/home/Server/logs"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      SERVER_HOME: /home/Server
    depends_on:
      - discovery-service
      - rabbitmq
      - applicationconfiguration
    networks:
      - cs_backend

  applicationconfiguration:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/applicationconfiguration:4.3.5-release-20240812
    container_name: applicationconfiguration
    restart: always
    ports:
      - "9010:9010"
    volumes:
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "../logs:/home/Server/logs"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"    
    environment:
      SERVER_HOME: /home/Server
    depends_on:
      - discovery-service
      - rabbitmq
      - redis
      - configserver
    networks:
      - cs_backend 

  discovery-service:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/discoveryservice:4.3.5-release-20240812
    container_name: discovery-service
    restart: always
    ports:
      - "8761:8761"
    volumes: 
      - "../logs:/home/Server/logs"
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"   
    environment:
      SERVER_HOME: /home/Server
    networks:
      - cs_backend

  irservice:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/irservice:4.3.5-release-20240812
    container_name: irservice
    restart: always
    ports:
      - "9099:9099"
    volumes:
      - "../logs:/home/Server/logs"
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "../logs:/home/irservice/logs:rw"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"    
    environment:
      SERVER_HOME: /home/Server
    depends_on:
      - discovery-service
      - configserver
    networks:
      - cs_backend      
 
  usermanagement:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/usermanagement:4.3.5-release-20240812
    container_name: usermanagement
    restart: always
    ports:
      - "9047:9047"
    volumes:
      - "../logs:/home/Server/logs"
      - "cs-props:/home/properties"
      - "cs-server:/home/Server"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    environment:
      SERVER_HOME: /home/Server
      #TZ: Asia/Kolkata
    depends_on:
      - discovery-service
      - configserver
    networks:
      - cs_backend

  haproxy:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/haproxy:4.3.5-release-20240812
    container_name: haproxy
    restart: always
    depends_on:
      - csview
      - workflow
      - cchelp
      - converter
    #  - cis-api
    ports:
      - "443:8443"
    volumes:
      - "../haproxy/:/usr/local/etc/haproxy"
      - "../haproxy/certs/:/etc/ssl/certs"
    networks:
      cs_backend:
        aliases:
          - "portal.certscan.net"

  superset:
    image: 585953033457.dkr.ecr.us-east-2.amazonaws.com/s2/cs/superset:4.3.5-release-20240812
    container_name: superset
    restart: always
    environment:
      - ADMIN_USERNAME=ssadmin
      - ADMIN_EMAIL=admin@superset.com
      - ADMIN_PASSWORD=solutions@123      
      - SUPERSET_SECRET_KEY="G2xuni+KO3IAkc/ZiC2cn1s8pfc3ygiXide2j+0A6u6Fwa6E"
      # openssl rand -base64 42
    volumes:
      - "superset-data:/app/superset_home:rw"
      - "/etc/timezone:/etc/timezone:ro" 
      - "/etc/localtime:/etc/localtime:ro"
    ports:
      - '8088:8088'
    networks:
      - cs_backend
      
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    ports:
      - "8000:80"
    environment:
      PGADMIN_DEFAULT_PASSWORD: solutions@123
      PGADMIN_DEFAULT_EMAIL: certscanuser@certscan.net
    networks:
      - cs_backend
volumes:
  pg-data:
    external: true
  rabbitmq:
  redis-data:
  cs-archive:
  cs-server:
    external: true
  cs-props:
    external: true
  superset-data:

networks:
  cs_backend:
